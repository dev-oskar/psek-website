---
import { IoSunny, IoMoon } from "react-icons/io5";
---

<button class="theme-toggle flex justify-center items-center">
  <span class="icon hidden dark:block"
    ><IoSunny client:load className="text-white" /></span
  >
  <span class="icon block dark:hidden"
    ><IoMoon client:load className="text-gray-700" /></span
  >
  <!-- {
    import.meta.env.MODE == "development" && (
      <span class="theme-label ml-4 text-sm bg-rose-300 px-2 py-1 text-black">
      </span>
    )
  } -->
</button>

<script>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  const setToggleListeners = () => {
    // Get all theme toggle buttons
    const toggleBtns = document.querySelectorAll(".theme-toggle");
    
    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
      
      // Update all theme labels if they exist
      const labels = document.querySelectorAll(".theme-label");
      labels.forEach(label => {
        if (label) {
          label.textContent = isDark ? "Dark theme" : "Light theme";
        }
      });
    };

    // Add event listener to all toggle buttons
    toggleBtns.forEach(btn => {
      btn.removeEventListener("click", handleToggleClick);
      btn.addEventListener("click", handleToggleClick);
    });
  };

  setToggleListeners();

  document.addEventListener("astro:after-swap", setToggleListeners);
  
  // Initialize theme labels if they exist
  const labels = document.querySelectorAll(".theme-label");
  labels.forEach(label => {
    if (label) {
      label.textContent = theme === "dark" ? "Dark theme" : "Light theme";
    }
  });
</script>
